#include <iostream>
using namespace std;
int ladder_topdown(int n,int k,int dp[])
{
    if (n==0)
    return 1;
    if (dp[n]!=0)
    return dp[n];
    int counts=0;
    for (int i=1;i<=k;i++){
        if (n-i>=0)
        counts+=ladder_topdown(n-i,k,dp);
    }
    
    return dp[n]=ways;
}
int ladder_bottomup (int n,int k,int dp[]){
        //int dp[n]={0};
        dp[0]=1;
    for (int i=1;i<=n;i++){
        
        for (int j=1;j<=k;j++){
            if (i-j>=0)
            dp[i]+=dp[i-j];
        }
    }
     return dp[n];   
}
int main() {

	int n,k;cin>>n>>k;
	int dp1[1000]={0};
	int dp2[1000]={0};
	cout<<ladder_topdown(n,k,dp1)<<endl;
	cout<<ladder_bottomup(n,k,dp2);
	return 0;
}
