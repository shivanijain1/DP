#include <iostream>
using namespace std;
int catalan_topdown (int n,int dp[]){
    if (n==0)
    return 1;
   dp[n]={-1};
    if (dp[n]!=-1)
    return dp[n];
    int ans=0;
    for (int i=1;i<=n;i++){
        ans+=catalan_topdown(i-1,dp)*catalan_topdown(n-i,dp);
    }
    return dp[n]=ans;
    
}
int catalan_bottomup(int n,int dp[]){
    
    //int dp[n+1];
    dp[0]=1;
    dp[1]=1;
    for (int i=2;i<=n;i++){
        //dp[i]=0;
        for (int j=0;j<i;j++){
            dp[i]+=dp[j]*dp[i-j-1];
        }
        
    }return dp[n];
}
int main() {
    int n;cin>>n;
    int dp1[1000]={-1};
    int dp2[1000]={0};
	cout<<catalan_topdown(n,dp1)<<endl;
	cout<<catalan_bottomup(n,dp2)<<endl;
	return 0;
}
